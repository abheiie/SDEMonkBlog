"use strict";(self.webpackChunksde_monk_blog=self.webpackChunksde_monk_blog||[]).push([[9116],{527:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"OOP/overview","title":"Overview","description":"What is OOP?","source":"@site/docs/OOP/overview.md","sourceDirName":"OOP","slug":"/OOP/overview","permalink":"/docs/OOP/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/OOP/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"OOP Principles","permalink":"/docs/docs/oop"},"next":{"title":"Encapsulation","permalink":"/docs/OOP/encapsulation"}}');var r=s(4848),o=s(8453);const t={sidebar_position:1},l="Overview",c={},a=[{value:"What is OOP?",id:"what-is-oop",level:2},{value:"Why use OOP?",id:"why-use-oop",level:2},{value:"Key OOP Concepts:",id:"key-oop-concepts",level:2}];function d(e){const n={h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,r.jsx)(n.h2,{id:"what-is-oop",children:"What is OOP?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Object-Oriented Programming (OOP)"}),' is a programming paradigm based on the concept of "objects", which can contain ',(0,r.jsx)(n.strong,{children:"data"})," (attributes) and ",(0,r.jsx)(n.strong,{children:"code"})," (methods)."]}),"\n",(0,r.jsx)(n.p,{children:"Instead of writing procedures and functions, OOP organizes code into reusable structures that model real-world entities."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"why-use-oop",children:"Why use OOP?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Encourages ",(0,r.jsx)(n.strong,{children:"modularity"})," through encapsulation"]}),"\n",(0,r.jsxs)(n.li,{children:["Promotes ",(0,r.jsx)(n.strong,{children:"code reusability"})," via inheritance"]}),"\n",(0,r.jsxs)(n.li,{children:["Improves ",(0,r.jsx)(n.strong,{children:"maintainability"})," and ",(0,r.jsx)(n.strong,{children:"scalability"})]}),"\n",(0,r.jsxs)(n.li,{children:["Simplifies ",(0,r.jsx)(n.strong,{children:"refactoring"})," and ",(0,r.jsx)(n.strong,{children:"extending"})," applications"]}),"\n",(0,r.jsxs)(n.li,{children:["Helps you ",(0,r.jsx)(n.strong,{children:"model complex systems"})," using real-world analogies"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"key-oop-concepts",children:"Key OOP Concepts:"}),"\n",(0,r.jsx)(n.p,{children:"We will now explore the 4 fundamental principles of OOP one-by-one:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Encapsulation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Abstraction"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Inheritance"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Polymorphism"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var i=s(6540);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);