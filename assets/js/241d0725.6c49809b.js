"use strict";(self.webpackChunksde_monk_blog=self.webpackChunksde_monk_blog||[]).push([[2930],{334:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"OOP/polymorphism","title":"Polymorphism","description":"What is Polymorphism?","source":"@site/docs/OOP/polymorphism.md","sourceDirName":"OOP","slug":"/OOP/polymorphism","permalink":"/docs/OOP/polymorphism","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/OOP/polymorphism.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Inheritance","permalink":"/docs/OOP/inheritance"},"next":{"title":"SOLID Principles","permalink":"/docs/docs/solid"}}');var r=s(4848),i=s(8453);const l={sidebar_position:5},t="Polymorphism",a={},d=[{value:"What is Polymorphism?",id:"what-is-polymorphism",level:2},{value:"Why use Polymorphism?",id:"why-use-polymorphism",level:2},{value:"Real-world Example:",id:"real-world-example",level:2},{value:"Types of Polymorphism in Python:",id:"types-of-polymorphism-in-python",level:2},{value:"1\ufe0f\u20e3 Compile-Time Polymorphism (Method Overloading) \u274c",id:"1\ufe0f\u20e3-compile-time-polymorphism-method-overloading-",level:3},{value:"2\ufe0f\u20e3 Run-Time Polymorphism (Method Overriding) \u2705",id:"2\ufe0f\u20e3-run-time-polymorphism-method-overriding-",level:3},{value:"\u2705 Summary:",id:"-summary",level:2},{value:"Encourages:",id:"encourages",level:3},{value:"Polymorphism helps you:",id:"polymorphism-helps-you",level:3}];function h(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"polymorphism",children:"Polymorphism"})}),"\n",(0,r.jsx)(n.h2,{id:"what-is-polymorphism",children:"What is Polymorphism?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Polymorphism"})," means \u201cmany forms\u201d. It allows objects of different classes to be treated as objects of a common superclass.",(0,r.jsx)(n.br,{}),"\n","It enables the ",(0,r.jsx)(n.strong,{children:"same interface"})," to behave differently depending on the underlying object."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"why-use-polymorphism",children:"Why use Polymorphism?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Enables ",(0,r.jsx)(n.strong,{children:"flexible and reusable"})," code"]}),"\n",(0,r.jsxs)(n.li,{children:["Allows ",(0,r.jsx)(n.strong,{children:"method overriding"})," for specific behaviors"]}),"\n",(0,r.jsxs)(n.li,{children:["Promotes ",(0,r.jsx)(n.strong,{children:"interface-based design"})]}),"\n",(0,r.jsxs)(n.li,{children:["Makes it easier to ",(0,r.jsx)(n.strong,{children:"extend"})," functionality"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"real-world-example",children:"Real-world Example:"}),"\n",(0,r.jsxs)(n.p,{children:["Different animals make different sounds, but all respond to the ",(0,r.jsx)(n.code,{children:"make_sound()"})," call."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Python",children:'class Animal:\n    def make_sound(self):\n        pass\n\nclass Dog(Animal):\n    def make_sound(self):\n        print("Woof!")\n\nclass Cat(Animal):\n    def make_sound(self):\n        print("Meow!")\n\ndef animal_sound(animal: Animal):\n    animal.make_sound()\n\nanimal_sound(Dog())  # Woof!\nanimal_sound(Cat())  # Meow!\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u2705 One function handles multiple object types. That\u2019s polymorphism!"}),"\n",(0,r.jsx)(n.h2,{id:"types-of-polymorphism-in-python",children:"Types of Polymorphism in Python:"}),"\n",(0,r.jsx)(n.h3,{id:"1\ufe0f\u20e3-compile-time-polymorphism-method-overloading-",children:"1\ufe0f\u20e3 Compile-Time Polymorphism (Method Overloading) \u274c"}),"\n",(0,r.jsx)(n.p,{children:"Python does not support true method overloading (like Java/C++), but you can use default or variable-length arguments."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Python",children:"class Math:\n    def add(self, a, b=0, c=0):\n        return a + b + c\n\nm = Math()\nprint(m.add(2))       # 2\nprint(m.add(2, 3))    # 5\nprint(m.add(2, 3, 4)) # 9\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2\ufe0f\u20e3-run-time-polymorphism-method-overriding-",children:"2\ufe0f\u20e3 Run-Time Polymorphism (Method Overriding) \u2705"}),"\n",(0,r.jsx)(n.p,{children:"Subclasses override the parent class method to provide specific behavior."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Python",children:"class Shape:\n    def area(self):\n        pass\n\nclass Circle(Shape):\n    def area(self):\n        return 3.14 * 5 * 5\n\nclass Square(Shape):\n    def area(self):\n        return 4 * 4\n\nshapes = [Circle(), Square()]\nfor shape in shapes:\n    print(shape.area())\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-summary",children:"\u2705 Summary:"}),"\n",(0,r.jsxs)(n.p,{children:["Polymorphism allows the ",(0,r.jsx)(n.strong,{children:"same interface"})," to be reused for ",(0,r.jsx)(n.strong,{children:"different underlying forms"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"encourages",children:"Encourages:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Cleaner"})," and ",(0,r.jsx)(n.strong,{children:"extensible"})," code"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 Better use of ",(0,r.jsx)(n.strong,{children:"abstraction"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 Flexible systems with ",(0,r.jsx)(n.strong,{children:"fewer changes needed"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"polymorphism-helps-you",children:"Polymorphism helps you:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Replace/extend logic"})," without changing the existing code"]}),"\n",(0,r.jsxs)(n.li,{children:["Rely on ",(0,r.jsx)(n.strong,{children:"contracts/interfaces"})," rather than concrete types"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var o=s(6540);const r={},i=o.createContext(r);function l(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);